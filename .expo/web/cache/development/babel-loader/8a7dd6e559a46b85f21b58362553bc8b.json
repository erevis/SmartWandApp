{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport { createContext } from 'react';\nvar authContext = React.useMemo(function () {\n  return {\n    signIn: function signIn(data) {\n      return _regeneratorRuntime.async(function signIn$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              dispatch({\n                type: 'SIGN_IN',\n                token: 'dummy-auth-token'\n              });\n\n            case 1:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    },\n    signOut: function signOut() {\n      return dispatch({\n        type: 'SIGN_OUT'\n      });\n    },\n    signUp: function signUp(data) {\n      return _regeneratorRuntime.async(function signUp$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              dispatch({\n                type: 'SIGN_IN',\n                token: 'dummy-auth-token'\n              });\n\n            case 1:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    }\n  };\n}, []);\nexport default authContext;","map":{"version":3,"sources":["C:/Users/Evan/Documents/smart-wand-app/components/AuthContext.js"],"names":["createContext","authContext","React","useMemo","signIn","data","dispatch","type","token","signOut","signUp"],"mappings":";AAAA,SAASA,aAAT,QAA8B,OAA9B;AAEA,IAAMC,WAAW,GAAGC,KAAK,CAACC,OAAN,CAChB;AAAA,SAAO;AACLC,IAAAA,MAAM,EAAE,gBAAMC,IAAN;AAAA;AAAA;AAAA;AAAA;AAMNC,cAAAA,QAAQ,CAAC;AAAEC,gBAAAA,IAAI,EAAE,SAAR;AAAmBC,gBAAAA,KAAK,EAAE;AAA1B,eAAD,CAAR;;AANM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADH;AASLC,IAAAA,OAAO,EAAE;AAAA,aAAMH,QAAQ,CAAC;AAAEC,QAAAA,IAAI,EAAE;AAAR,OAAD,CAAd;AAAA,KATJ;AAULG,IAAAA,MAAM,EAAE,gBAAML,IAAN;AAAA;AAAA;AAAA;AAAA;AAMNC,cAAAA,QAAQ,CAAC;AAAEC,gBAAAA,IAAI,EAAE,SAAR;AAAmBC,gBAAAA,KAAK,EAAE;AAA1B,eAAD,CAAR;;AANM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAVH,GAAP;AAAA,CADgB,EAoBhB,EApBgB,CAApB;AAuBA,eAAeP,WAAf","sourcesContent":["import { createContext } from 'react';\r\n\r\nconst authContext = React.useMemo(\r\n    () => ({\r\n      signIn: async data => {\r\n        // In a production app, we need to send some data (usually username, password) to server and get a token\r\n        // We will also need to handle errors if sign in failed\r\n        // After getting token, we need to persist the token using `SecureStore`\r\n        // In the example, we'll use a dummy token\r\n\r\n        dispatch({ type: 'SIGN_IN', token: 'dummy-auth-token' });\r\n      },\r\n      signOut: () => dispatch({ type: 'SIGN_OUT' }),\r\n      signUp: async data => {\r\n        // In a production app, we need to send user data to server and get a token\r\n        // We will also need to handle errors if sign up failed\r\n        // After getting token, we need to persist the token using `SecureStore`\r\n        // In the example, we'll use a dummy token\r\n\r\n        dispatch({ type: 'SIGN_IN', token: 'dummy-auth-token' });\r\n      },\r\n    }),\r\n    []\r\n  );\r\n\r\nexport default authContext;"]},"metadata":{},"sourceType":"module"}