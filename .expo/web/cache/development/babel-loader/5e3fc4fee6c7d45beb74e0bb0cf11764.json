{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Noah\\\\Documents\\\\Smart Wand App\\\\SmartWandApp\\\\components\\\\Therapy.js\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport * as React from 'react';\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\nimport { NavigationContainer } from '@react-navigation/native';\nimport { MaterialIcons } from '@expo/vector-icons';\nimport { Premade } from \"../routes/Premade\";\nimport { Manual } from \"../routes/Manual\";\nimport { Discovery } from \"../routes/Discovery\";\nimport { Personal } from \"../routes/Personal\";\nvar Stack = createNativeStackNavigator();\nexport function Therapy() {\n  var _this = this;\n\n  var ref = React.useRef(null);\n\n  function Default() {\n    return React.createElement(View, {\n      style: styles.container,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 7\n      }\n    }, React.createElement(Text, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 9\n      }\n    }, \"Default Page\"), React.createElement(Button, {\n      title: \"Premade\",\n      color: \"#2196F3\",\n      onPress: function onPress() {\n        ref.current && ref.current.navigate('Premade');\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 9\n      }\n    }), React.createElement(Button, {\n      title: \"Manual Session\",\n      color: \"#2196F3\",\n      onPress: function onPress() {\n        ref.current && ref.current.navigate('Manual Session');\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }\n    }), React.createElement(Button, {\n      title: \"Discovery Mode\",\n      color: \"#2196F3\",\n      onPress: function onPress() {\n        ref.current && ref.current.navigate('Discovery Mode');\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }\n    }), React.createElement(Button, {\n      title: \"Personal Program\",\n      color: \"#2196F3\",\n      onPress: function onPress() {\n        ref.current && ref.current.navigate('Personal Program');\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }\n    }));\n  }\n\n  return React.createElement(View, {\n    style: {\n      flex: 1\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }\n  }, React.createElement(NavigationContainer, {\n    independent: true,\n    ref: ref,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }\n  }, React.createElement(Stack.Navigator, {\n    initialRouteName: \"Therapy\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 11\n    }\n  }, React.createElement(Stack.Screen, {\n    name: \"Therapy\",\n    component: Default,\n    options: {\n      headerTitle: function headerTitle(props) {\n        return React.createElement(Header, {\n          name: \"Therapy\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 97\n          }\n        });\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }\n  }), React.createElement(Stack.Screen, {\n    name: \"Premade\",\n    component: Premade,\n    options: {\n      headerTitle: function headerTitle(props) {\n        return React.createElement(Header, {\n          name: \"Premade\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 97\n          }\n        });\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }\n  }), React.createElement(Stack.Screen, {\n    name: \"Discovery Mode\",\n    component: Discovery,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }\n  }), React.createElement(Stack.Screen, {\n    name: \"Personal Program\",\n    component: Personal,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }\n  }), React.createElement(Stack.Screen, {\n    name: \"Manual Session\",\n    component: Manual,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }\n  }))));\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  header: {\n    flexDirection: \"row\"\n  },\n  label: {\n    fontSize: 30\n  }\n});\n\nfunction Header(props) {\n  return React.createElement(View, {\n    style: styles.header,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 5\n    }\n  }, React.createElement(Text, {\n    style: styles.label,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }\n  }, props.name), React.createElement(MaterialIcons, {\n    name: \"account-circle\",\n    size: 40,\n    color: \"black\",\n    style: styles.account,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }\n  }));\n}","map":{"version":3,"sources":["C:/Users/Noah/Documents/Smart Wand App/SmartWandApp/components/Therapy.js"],"names":["React","createNativeStackNavigator","NavigationContainer","MaterialIcons","Premade","Manual","Discovery","Personal","Stack","Therapy","ref","useRef","Default","styles","container","current","navigate","flex","headerTitle","props","StyleSheet","create","backgroundColor","alignItems","justifyContent","header","flexDirection","label","fontSize","Header","name","account"],"mappings":"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","sourcesContent":["import {StyleSheet, View, Text, Button} from 'react-native'\r\nimport * as React from 'react';\r\nimport {createNativeStackNavigator} from '@react-navigation/native-stack'\r\nimport { NavigationContainer } from '@react-navigation/native';\r\nimport { MaterialIcons } from '@expo/vector-icons'; \r\nimport { Premade } from '../routes/Premade';\r\nimport { Manual } from '../routes/Manual';\r\nimport { Discovery } from '../routes/Discovery';\r\nimport { Personal } from '../routes/Personal';\r\n\r\n\r\n\r\nconst Stack = createNativeStackNavigator();\r\n\r\nexport function Therapy() {\r\n  const ref = React.useRef(null);\r\n  \r\n  function Default() {\r\n    return(\r\n      <View style={styles.container}>  \r\n        <Text>Default Page</Text>\r\n        <Button \r\n          title=\"Premade\"\r\n          color='#2196F3'\r\n          onPress={() => {ref.current && ref.current.navigate('Premade')}}\r\n        />\r\n        <Button \r\n          title=\"Manual Session\"\r\n          color='#2196F3'\r\n          onPress={() => {ref.current && ref.current.navigate('Manual Session')}}\r\n        />\r\n        <Button \r\n          title=\"Discovery Mode\"\r\n          color='#2196F3'\r\n          onPress={() => {ref.current && ref.current.navigate('Discovery Mode')}}\r\n        /> \r\n        <Button \r\n          title=\"Personal Program\"\r\n          color='#2196F3'\r\n          onPress={() => {ref.current && ref.current.navigate('Personal Program')}}\r\n        /> \r\n      </View>\r\n    );\r\n  }\r\n\r\n  return (\r\n      <View style={{flex:1}}>\r\n        <NavigationContainer independent={true} ref={ref}>\r\n          <Stack.Navigator initialRouteName=\"Therapy\">\r\n            <Stack.Screen name=\"Therapy\" component={Default} options={{ headerTitle: (props) => <Header name=\"Therapy\"/>}}/>\r\n            <Stack.Screen name=\"Premade\" component={Premade} options={{ headerTitle: (props) => <Header name=\"Premade\"/>}}/>\r\n            <Stack.Screen name=\"Discovery Mode\" component={Discovery}/>\r\n            <Stack.Screen name=\"Personal Program\" component={Personal}/>\r\n            <Stack.Screen name=\"Manual Session\" component={Manual}/>\r\n          </Stack.Navigator>\r\n        </NavigationContainer>  \r\n      </View>\r\n    )\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    backgroundColor: '#fff',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n  },\r\n  header: {\r\n    flexDirection: \"row\"\r\n  },\r\n  label: {\r\n    fontSize: 30,\r\n  },  \r\n});\r\n\r\nfunction Header(props) {\r\n  return (\r\n    <View style={styles.header}>\r\n      <Text style={styles.label}>{props.name}</Text>\r\n      <MaterialIcons name=\"account-circle\" size={40} color=\"black\" style={styles.account}/> \r\n    </View>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}