{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\Evan\\\\Documents\\\\smart-wand-app\\\\App.js\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport * as React from 'react';\nimport { StatusBar } from \"expo-status-bar\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport NativeModules from \"react-native-web/dist/exports/NativeModules\";\nimport { createMaterialBottomTabNavigator } from '@react-navigation/material-bottom-tabs';\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createStackNavigator } from '@react-navigation/stack';\nimport 'react-native-gesture-handler';\nimport { Entypo, AntDesign, MaterialIcons } from '@expo/vector-icons';\nimport { Therapy } from \"./components/Therapy.js\";\nimport { Education } from \"./components/Education.js\";\nimport { Progress } from \"./components/Progress.js\";\nimport { Account } from \"./components/Account.js\";\nimport { COLORS } from \"./components/Colors.js\";\nimport AuthContext from \"./components/AuthContext.js\";\nimport * as SecureStore from 'expo-secure-store';\nimport { Svg } from 'expo';\nimport { Circle, Rect, Path } from 'react-native-svg';\nimport { Square1, Square2, Square3 } from \"./components/Background.js\";\nvar Tab = createMaterialBottomTabNavigator();\n\nvar _Dimensions$get = Dimensions.get('screen'),\n    width = _Dimensions$get.width,\n    height = _Dimensions$get.height;\n\nexport function Tabs() {\n  var _this = this;\n\n  return React.createElement(Tab.Navigator, {\n    initialRouteName: \"Therapy\",\n    activeColor: \"#e9cb1e\",\n    labelStyle: {\n      fontSize: 12\n    },\n    barStyle: {\n      backgroundColor: COLORS.bottom,\n      paddingBottom: 0\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 5\n    }\n  }, React.createElement(Tab.Screen, {\n    name: \"Therapy\",\n    component: Therapy,\n    options: {\n      tabBarLabel: 'Therapy',\n      tabBarIcon: function tabBarIcon(_ref) {\n        var color = _ref.color;\n        return React.createElement(AntDesign, {\n          name: \"medicinebox\",\n          size: 24,\n          color: color,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 13\n          }\n        });\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }\n  }), React.createElement(Tab.Screen, {\n    name: \"Education\",\n    component: Education,\n    options: {\n      tabBarLabel: 'Education',\n      tabBarIcon: function tabBarIcon(_ref2) {\n        var color = _ref2.color;\n        return React.createElement(AntDesign, {\n          name: \"book\",\n          size: 24,\n          color: color,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 13\n          }\n        });\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }\n  }), React.createElement(Tab.Screen, {\n    name: \"Progress\",\n    component: Progress,\n    options: {\n      tabBarLabel: 'Progress',\n      tabBarIcon: function tabBarIcon(_ref3) {\n        var color = _ref3.color;\n        return React.createElement(Entypo, {\n          name: \"progress-two\",\n          size: 24,\n          color: color,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 13\n          }\n        });\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }\n  }), React.createElement(Tab.Screen, {\n    name: \"Account\",\n    component: Account,\n    options: {\n      tabBarLabel: 'Account',\n      tabBarIcon: function tabBarIcon(_ref4) {\n        var color = _ref4.color;\n        return React.createElement(MaterialIcons, {\n          name: \"account-circle\",\n          size: 24,\n          color: color,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 13\n          }\n        });\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }\n  }));\n}\nvar Stack = createStackNavigator();\n\nfunction SignInScreen() {\n  var _React$useState = React.useState(''),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      username = _React$useState2[0],\n      setUsername = _React$useState2[1];\n\n  var _React$useState3 = React.useState(''),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      password = _React$useState4[0],\n      setPassword = _React$useState4[1];\n\n  var _React$useContext = React.useContext(AuthContext),\n      signIn = _React$useContext.signIn;\n\n  return React.createElement(View, {\n    style: styles.background,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 5\n    }\n  }, React.createElement(Square1, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 5\n    }\n  }), React.createElement(Square2, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 5\n    }\n  }), React.createElement(Square3, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 5\n    }\n  }), React.createElement(Image, {\n    style: styles.image,\n    source: require(\"./assets/logo.png\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }\n  }), React.createElement(StatusBar, {\n    style: \"auto\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }\n  }), React.createElement(TextInput, {\n    placeholder: \"Email\",\n    placeholderTextColor: COLORS.color4,\n    fontWeight: \"bold\",\n    value: username,\n    style: styles.input,\n    onChangeText: setUsername,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }\n  }), React.createElement(TextInput, {\n    placeholder: \"Password\",\n    placeholderTextColor: COLORS.color4,\n    fontWeight: \"bold\",\n    value: password,\n    style: styles.input,\n    onChangeText: setPassword,\n    secureTextEntry: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 7\n    }\n  }), React.createElement(TouchableOpacity, {\n    style: styles.forgotButton,\n    onPress: function onPress() {},\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 7\n    }\n  }, React.createElement(Text, {\n    style: styles.forgotText,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 9\n    }\n  }, \"Forgot Password?\")), React.createElement(TouchableOpacity, {\n    style: styles.loginButton,\n    onPress: function onPress() {\n      return signIn({\n        username: username,\n        password: password\n      });\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 7\n    }\n  }, React.createElement(Text, {\n    style: styles.loginText,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 9\n    }\n  }, \"LOGIN\")), React.createElement(TouchableOpacity, {\n    style: styles.createButton,\n    onPress: function onPress() {},\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 7\n    }\n  }, React.createElement(Text, {\n    style: styles.signupButton,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 9\n    }\n  }, \"Signup\")));\n}\n\nexport default function App() {\n  var _React$useReducer = React.useReducer(function (prevState, action) {\n    switch (action.type) {\n      case 'RESTORE_TOKEN':\n        return _objectSpread(_objectSpread({}, prevState), {}, {\n          userToken: action.token,\n          isLoading: false\n        });\n\n      case 'SIGN_IN':\n        return _objectSpread(_objectSpread({}, prevState), {}, {\n          isSignout: false,\n          userToken: action.token\n        });\n\n      case 'SIGN_OUT':\n        return _objectSpread(_objectSpread({}, prevState), {}, {\n          isSignout: true,\n          userToken: null\n        });\n    }\n  }, {\n    isLoading: true,\n    isSignout: false,\n    userToken: null\n  }),\n      _React$useReducer2 = _slicedToArray(_React$useReducer, 2),\n      state = _React$useReducer2[0],\n      dispatch = _React$useReducer2[1];\n\n  React.useEffect(function () {\n    var bootstrapAsync = function bootstrapAsync() {\n      var userToken;\n      return _regeneratorRuntime.async(function bootstrapAsync$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              _context.next = 3;\n              return _regeneratorRuntime.awrap(SecureStore.getItemAsync('userToken'));\n\n            case 3:\n              userToken = _context.sent;\n              _context.next = 8;\n              break;\n\n            case 6:\n              _context.prev = 6;\n              _context.t0 = _context[\"catch\"](0);\n\n            case 8:\n              dispatch({\n                type: 'RESTORE_TOKEN',\n                token: userToken\n              });\n\n            case 9:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, [[0, 6]], Promise);\n    };\n\n    bootstrapAsync();\n  }, []);\n  var authContext = React.useMemo(function () {\n    return {\n      signIn: function signIn(data) {\n        return _regeneratorRuntime.async(function signIn$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                dispatch({\n                  type: 'SIGN_IN',\n                  token: 'dummy-auth-token'\n                });\n\n              case 1:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, null, null, null, Promise);\n      },\n      signOut: function signOut() {\n        return dispatch({\n          type: 'SIGN_OUT'\n        });\n      },\n      signUp: function signUp(data) {\n        return _regeneratorRuntime.async(function signUp$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                dispatch({\n                  type: 'SIGN_IN',\n                  token: 'dummy-auth-token'\n                });\n\n              case 1:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, null, null, null, Promise);\n      }\n    };\n  }, []);\n  return React.createElement(AuthContext.Provider, {\n    value: authContext,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 224,\n      columnNumber: 5\n    }\n  }, React.createElement(NavigationContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 225,\n      columnNumber: 7\n    }\n  }, React.createElement(Stack.Navigator, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 226,\n      columnNumber: 9\n    }\n  }, state.userToken == null ? React.createElement(Stack.Screen, {\n    name: \"SignIn\",\n    component: SignInScreen,\n    options: {\n      animationTypeForReplace: state.isSignout ? 'pop' : 'push',\n      headerTintColor: '#fff',\n      headerShown: false\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 228,\n      columnNumber: 13\n    }\n  }) : React.createElement(Stack.Screen, {\n    name: \"Home\",\n    component: Tabs,\n    options: {\n      headerShown: false\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 247,\n      columnNumber: 13\n    }\n  }))));\n}\nvar styles = StyleSheet.create({\n  background: {\n    flex: 1,\n    backgroundColor: COLORS.color6,\n    alignItems: 'center'\n  },\n  container: {\n    flex: 1,\n    backgroundColor: COLORS.background,\n    alignItems: 'center'\n  },\n  input: {\n    borderRadius: 25,\n    width: \"70%\",\n    height: 50,\n    padding: 10,\n    paddingLeft: 20,\n    borderWidth: 0,\n    borderColor: 'black',\n    backgroundColor: COLORS.color2,\n    marginBottom: 15,\n    color: '#FFFFFF'\n  },\n  loginButton: {\n    width: \"70%\",\n    borderRadius: 25,\n    height: 50,\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    marginTop: 40,\n    backgroundColor: \"#ec6767\"\n  },\n  loginText: {},\n  signupButton: {\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    marginTop: 15\n  },\n  forgotButton: {\n    height: 30\n  },\n  forgotText: {\n    fontStyle: 'italic'\n  },\n  image: {\n    marginTop: 60,\n    marginBottom: 40,\n    height: 250,\n    width: 250\n  }\n});","map":{"version":3,"sources":["C:/Users/Evan/Documents/smart-wand-app/App.js"],"names":["React","StatusBar","createMaterialBottomTabNavigator","NavigationContainer","createStackNavigator","Entypo","AntDesign","MaterialIcons","Therapy","Education","Progress","Account","COLORS","AuthContext","SecureStore","Svg","Circle","Rect","Path","Square1","Square2","Square3","Tab","Dimensions","get","width","height","Tabs","fontSize","backgroundColor","bottom","paddingBottom","tabBarLabel","tabBarIcon","color","Stack","SignInScreen","useState","username","setUsername","password","setPassword","useContext","signIn","styles","background","image","require","color4","input","forgotButton","forgotText","loginButton","loginText","createButton","signupButton","App","useReducer","prevState","action","type","userToken","token","isLoading","isSignout","state","dispatch","useEffect","bootstrapAsync","getItemAsync","authContext","useMemo","data","signOut","signUp","animationTypeForReplace","headerTintColor","headerShown","StyleSheet","create","flex","color6","alignItems","container","borderRadius","padding","paddingLeft","borderWidth","borderColor","color2","marginBottom","justifyContent","marginTop","fontStyle"],"mappings":"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","sourcesContent":["import * as React from 'react';\r\nimport { StatusBar } from \"expo-status-bar\";\r\nimport {StyleSheet, View, Text, TextInput, Button, Image, TouchableOpacity, Animated, Dimensions, NativeModules} from 'react-native'\r\nimport { createMaterialBottomTabNavigator } from '@react-navigation/material-bottom-tabs';\r\nimport { NavigationContainer } from '@react-navigation/native';\r\nimport { createStackNavigator } from '@react-navigation/stack';\r\nimport 'react-native-gesture-handler';\r\nimport { Entypo , AntDesign , MaterialIcons } from '@expo/vector-icons';\r\nimport {Therapy} from './components/Therapy.js'\r\nimport {Education} from './components/Education.js'\r\nimport {Progress} from './components/Progress.js'\r\nimport {Account} from './components/Account.js'\r\nimport {COLORS} from './components/Colors.js'\r\nimport AuthContext from './components/AuthContext.js';\r\nimport * as SecureStore from 'expo-secure-store';\r\nimport {Svg} from 'expo';\r\nimport {Circle, Rect, Path} from 'react-native-svg';\r\nimport {Square1, Square2, Square3} from './components/Background.js';\r\n\r\n\r\nconst Tab = createMaterialBottomTabNavigator();\r\nconst {width, height} = Dimensions.get('screen');\r\n\r\nexport function Tabs() {\r\n  return (\r\n    <Tab.Navigator\r\n      initialRouteName=\"Therapy\"\r\n      activeColor=\"#e9cb1e\"\r\n      labelStyle={{ fontSize: 12 }}\r\n      barStyle={{ backgroundColor: COLORS.bottom , paddingBottom: 0}}\r\n    >\r\n      <Tab.Screen\r\n        name=\"Therapy\"\r\n        component={Therapy}\r\n        options={{\r\n          tabBarLabel: 'Therapy',\r\n          tabBarIcon: ({ color }) => (\r\n            <AntDesign name=\"medicinebox\" size={24} color={color} />\r\n          ),\r\n        }}\r\n      />\r\n      <Tab.Screen\r\n        name=\"Education\"\r\n        component={Education}\r\n        options={{\r\n          tabBarLabel: 'Education',\r\n          tabBarIcon: ({ color }) => (\r\n            <AntDesign name=\"book\" size={24} color={color} />\r\n          ),\r\n        }}\r\n      />\r\n      <Tab.Screen\r\n        name=\"Progress\"\r\n        component={Progress}\r\n        options={{\r\n          tabBarLabel: 'Progress',\r\n          tabBarIcon: ({ color }) => (\r\n            <Entypo name=\"progress-two\" size={24} color={color} />\r\n          ),\r\n        }}\r\n      />\r\n      <Tab.Screen\r\n        name=\"Account\"\r\n        component={Account}\r\n        options={{\r\n          tabBarLabel: 'Account',\r\n          tabBarIcon: ({ color }) => (\r\n            <MaterialIcons name=\"account-circle\" size={24} color={color}/> \r\n          ),\r\n        }}\r\n      />\r\n    </Tab.Navigator>\r\n  );\r\n}\r\n\r\nconst Stack = createStackNavigator();\r\n\r\nfunction SignInScreen() {\r\n  const [username, setUsername] = React.useState('');\r\n  const [password, setPassword] = React.useState('');\r\n\r\n  const { signIn } = React.useContext(AuthContext);\r\n\r\n  return (\r\n    <View style={styles.background}>\r\n\r\n    <Square1 />\r\n    <Square2 />\r\n    <Square3 />\r\n{/* <Svg height=\"100\" width=\"100\">\r\n  <Rect x=\"0\" y=\"0\" width=\"100\" height=\"100\" fill=\"black\" />\r\n  <Circle cx=\"50\" cy=\"50\" r=\"30\" fill=\"yellow\" />\r\n  <Circle cx=\"40\" cy=\"40\" r=\"4\" fill=\"black\" />\r\n  <Circle cx=\"60\" cy=\"40\" r=\"4\" fill=\"black\" />\r\n  <Path d=\"M 40 60 A 10 10 0 0 0 60 60\" stroke=\"black\" />\r\n</Svg> */}\r\n\r\n      <Image style={styles.image} source={require(\"./assets/logo.png\")} />\r\n\r\n      <StatusBar style=\"auto\" />\r\n\r\n      <TextInput\r\n        placeholder=\"Email\"\r\n        placeholderTextColor={COLORS.color4}\r\n        fontWeight='bold'\r\n        value={username}\r\n        style={styles.input}\r\n        onChangeText={setUsername}\r\n      />\r\n      <TextInput\r\n        placeholder=\"Password\"\r\n        placeholderTextColor={COLORS.color4}\r\n        fontWeight='bold'\r\n        value={password}\r\n        style={styles.input}\r\n        onChangeText={setPassword}\r\n        secureTextEntry={true}\r\n      />\r\n      <TouchableOpacity\r\n        style={styles.forgotButton}\r\n        onPress={() => {}}\r\n      >\r\n        <Text style={styles.forgotText}>Forgot Password?</Text>\r\n      </TouchableOpacity>\r\n\r\n      <TouchableOpacity\r\n        style={styles.loginButton}\r\n        onPress={() => signIn({ username, password })}\r\n      >\r\n        <Text style={styles.loginText}>LOGIN</Text>\r\n      </TouchableOpacity>\r\n\r\n      <TouchableOpacity\r\n        style={styles.createButton}\r\n        onPress={() => {}}\r\n      >\r\n        <Text style={styles.signupButton}>Signup</Text>\r\n      </TouchableOpacity>\r\n    </View>\r\n  );\r\n}\r\n\r\nexport default function App() {\r\n  const [state, dispatch] = React.useReducer(\r\n    (prevState, action) => {\r\n      switch (action.type) {\r\n        case 'RESTORE_TOKEN':\r\n          return {\r\n            ...prevState,\r\n            userToken: action.token,\r\n            isLoading: false,\r\n          };\r\n        case 'SIGN_IN':\r\n          return {\r\n            ...prevState,\r\n            isSignout: false,\r\n            userToken: action.token,\r\n          };\r\n        case 'SIGN_OUT':\r\n          return {\r\n            ...prevState,\r\n            isSignout: true,\r\n            userToken: null,\r\n          };\r\n      }\r\n    },\r\n    {\r\n      isLoading: true,\r\n      isSignout: false,\r\n      userToken: null,\r\n    }\r\n  )\r\n  // return (\r\n  //     <NavigationContainer>\r\n  //         <MyStack />\r\n  //     </NavigationContainer>\r\n  // );\r\n\r\n  React.useEffect(() => {\r\n    // Fetch the token from storage then navigate to our appropriate place\r\n    const bootstrapAsync = async () => {\r\n      let userToken;\r\n\r\n      try {\r\n        userToken = await SecureStore.getItemAsync('userToken');\r\n      } catch (e) {\r\n        // Restoring token failed\r\n      }\r\n\r\n      // After restoring token, we may need to validate it in production apps\r\n\r\n      // This will switch to the App screen or Auth screen and this loading\r\n      // screen will be unmounted and thrown away.\r\n      dispatch({ type: 'RESTORE_TOKEN', token: userToken });\r\n    };\r\n\r\n    bootstrapAsync();\r\n  }, []);\r\n\r\n  const authContext = React.useMemo(\r\n    () => ({\r\n      signIn: async data => {\r\n        // In a production app, we need to send some data (usually username, password) to server and get a token\r\n        // We will also need to handle errors if sign in failed\r\n        // After getting token, we need to persist the token using `SecureStore`\r\n        // In the example, we'll use a dummy token\r\n\r\n        dispatch({ type: 'SIGN_IN', token: 'dummy-auth-token' });\r\n      },\r\n      signOut: () => dispatch({ type: 'SIGN_OUT' }),\r\n      signUp: async data => {\r\n        // In a production app, we need to send user data to server and get a token\r\n        // We will also need to handle errors if sign up failed\r\n        // After getting token, we need to persist the token using `SecureStore`\r\n        // In the example, we'll use a dummy token\r\n\r\n        dispatch({ type: 'SIGN_IN', token: 'dummy-auth-token' });\r\n      },\r\n    }),\r\n    []\r\n  );\r\n\r\n  return (\r\n    <AuthContext.Provider value={authContext}>\r\n      <NavigationContainer>\r\n        <Stack.Navigator>\r\n          {state.userToken == null ? (\r\n            <Stack.Screen\r\n              name=\"SignIn\"\r\n              component={SignInScreen}\r\n              options={{\r\n                // title: 'Smart Wand Companion App',\r\n                // headerTitleStyle: {\r\n                //   color: '#000000',\r\n                //   fontWeight: 'bold',\r\n                // },\r\n                // headerStyle: {\r\n                //   backgroundColor: '#f3eed9',\r\n                // },\r\n                // headerTitleAlign: 'center',\r\n                animationTypeForReplace: state.isSignout ? 'pop' : 'push',\r\n                headerTintColor: '#fff',\r\n                headerShown: false,\r\n              }}\r\n            />\r\n          ) : (\r\n            <Stack.Screen\r\n            name=\"Home\"\r\n            component={Tabs}\r\n            options={{headerShown: false}}\r\n            />\r\n          )}\r\n        </Stack.Navigator>\r\n      </NavigationContainer>\r\n    </AuthContext.Provider>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  background: {\r\n    flex: 1,\r\n    backgroundColor: COLORS.color6,\r\n    alignItems: 'center',\r\n  },\r\n  container: {\r\n    flex: 1,\r\n    backgroundColor: COLORS.background,\r\n    alignItems: 'center',\r\n  },\r\n  input: {\r\n    borderRadius: 25,\r\n    width: \"70%\",\r\n    height: 50,\r\n    padding: 10,\r\n    paddingLeft: 20,\r\n    borderWidth: 0,\r\n    borderColor: 'black',\r\n    backgroundColor: COLORS.color2,\r\n    marginBottom: 15,\r\n    color: '#FFFFFF'\r\n  },\r\n  loginButton: {\r\n    width: \"70%\",\r\n    borderRadius: 25,\r\n    height: 50,\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    marginTop: 40,\r\n    backgroundColor: \"#ec6767\",\r\n  },\r\n  loginText: {},\r\n  signupButton: {\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    marginTop: 15,\r\n  },\r\n  forgotButton: {\r\n    height: 30,\r\n  },\r\n  forgotText: {\r\n    fontStyle: 'italic'\r\n  },\r\n  image: {\r\n    marginTop: 60,\r\n    marginBottom: 40,\r\n    height: 250,\r\n    width: 250\r\n  }\r\n});"]},"metadata":{},"sourceType":"module"}