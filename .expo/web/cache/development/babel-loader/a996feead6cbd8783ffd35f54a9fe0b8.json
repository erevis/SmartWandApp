{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"C:\\\\Users\\\\Noah\\\\Documents\\\\Smart Wand App\\\\SmartWandApp\\\\routes\\\\Thread.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport * as React from 'react';\nimport { render } from 'react-dom';\nimport { Comment } from \"../components/Comment.js\";\nimport axios from 'axios';\nimport { SETTINGS } from \"../settings/Settings.js\";\nexport function Thread(_ref) {\n  var route = _ref.route,\n      navigation = _ref.navigation;\n  var _route$params = route.params,\n      id = _route$params.id,\n      title = _route$params.title,\n      user_id = _route$params.user_id;\n  var nav = navigation.nav;\n\n  var CommentThread = function (_React$Component) {\n    _inherits(CommentThread, _React$Component);\n\n    var _super = _createSuper(CommentThread);\n\n    function CommentThread(props) {\n      var _this;\n\n      _classCallCheck(this, CommentThread);\n\n      _this = _super.call(this, props);\n      _this.state = {\n        comments: []\n      };\n      return _this;\n    }\n\n    _createClass(CommentThread, [{\n      key: \"componentDidMount\",\n      value: function componentDidMount() {\n        var _this2 = this;\n\n        axios.get(SETTINGS.url + '/comment/').then(function (response) {\n          var comments = response.data;\n\n          _this2.setState({\n            comments: comments\n          });\n        });\n      }\n    }, {\n      key: \"render\",\n      value: function render() {\n        var _this3 = this;\n\n        var _nav = {\n          nav: nav\n        },\n            navigate = _nav.navigate;\n        var comments = this.state.comments;\n        return React.createElement(View, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 17\n          }\n        }, React.createElement(Text, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 21\n          }\n        }, \"test \", id), comments.map(function (comment) {\n          return React.createElement(Comment, {\n            id: comment.id,\n            post_id: comment.post_id,\n            parent_id: comment.parent_id,\n            text: comment.text,\n            user_id: comment.user_id,\n            navigation: {\n              nav: nav\n            },\n            __self: _this3,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 35,\n              columnNumber: 49\n            }\n          });\n        }));\n      }\n    }]);\n\n    return CommentThread;\n  }(React.Component);\n\n  return React.createElement(CommentThread, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }\n  });\n}","map":{"version":3,"sources":["C:/Users/Noah/Documents/Smart Wand App/SmartWandApp/routes/Thread.js"],"names":["React","render","Comment","axios","SETTINGS","Thread","route","navigation","params","id","title","user_id","nav","CommentThread","props","state","comments","get","url","then","response","data","setState","navigate","map","comment","post_id","parent_id","text","Component"],"mappings":";;;;;;;;;;;;;;;AACA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SAASC,MAAT,QAAuB,WAAvB;AACA,SAAQC,OAAR;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAAQC,QAAR;AAGA,OAAO,SAASC,MAAT,OAAoC;AAAA,MAAnBC,KAAmB,QAAnBA,KAAmB;AAAA,MAAbC,UAAa,QAAbA,UAAa;AACvC,sBAA6BD,KAAK,CAACE,MAAnC;AAAA,MAAOC,EAAP,iBAAOA,EAAP;AAAA,MAAWC,KAAX,iBAAWA,KAAX;AAAA,MAAkBC,OAAlB,iBAAkBA,OAAlB;AACA,MAAOC,GAAP,GAAcL,UAAd,CAAOK,GAAP;;AAFuC,MAIjCC,aAJiC;AAAA;;AAAA;;AAKnC,2BAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACf,gCAAMA,KAAN;AADe,YAGnBC,KAHmB,GAGX;AACJC,QAAAA,QAAQ,EAAE;AADN,OAHW;AAAA;AAElB;;AAPkC;AAAA;AAAA,aAYnC,6BAAoB;AAAA;;AAChBb,QAAAA,KAAK,CAACc,GAAN,CAAUb,QAAQ,CAACc,GAAT,GAAa,WAAvB,EACGC,IADH,CACQ,UAACC,QAAD,EAAY;AAChB,cAAMJ,QAAQ,GAAGI,QAAQ,CAACC,IAA1B;;AACA,UAAA,MAAI,CAACC,QAAL,CAAc;AAACN,YAAAA,QAAQ,EAARA;AAAD,WAAd;AACD,SAJH;AAKH;AAlBkC;AAAA;AAAA,aAmBnC,kBAAS;AAAA;;AACL,mBAAqB;AAACJ,UAAAA,GAAG,EAAHA;AAAD,SAArB;AAAA,YAAQW,QAAR,QAAQA,QAAR;AACA,YAAQP,QAAR,GAAqB,KAAKD,KAA1B,CAAQC,QAAR;AACA,eACI,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACI,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAYP,EAAZ,CADJ,EAGQO,QAAQ,CAACQ,GAAT,CAAa,UAACC,OAAD;AAAA,iBAAW,oBAAC,OAAD;AAAS,YAAA,EAAE,EAAEA,OAAO,CAAChB,EAArB;AAAyB,YAAA,OAAO,EAAEgB,OAAO,CAACC,OAA1C;AAAmD,YAAA,SAAS,EAAED,OAAO,CAACE,SAAtE;AAAiF,YAAA,IAAI,EAAEF,OAAO,CAACG,IAA/F;AAAqG,YAAA,OAAO,EAAEH,OAAO,CAACd,OAAtH;AAA+H,YAAA,UAAU,EAAE;AAACC,cAAAA,GAAG,EAAHA;AAAD,aAA3I;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAX;AAAA,SAAb,CAHR,CADJ;AAQH;AA9BkC;;AAAA;AAAA,IAIXZ,KAAK,CAAC6B,SAJK;;AAgCvC,SAAQ,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAR;AACH","sourcesContent":["import {StyleSheet, View, Text, TouchableOpacity} from 'react-native'\r\nimport * as React from 'react';\r\nimport { render } from 'react-dom';\r\nimport {Comment} from '../components/Comment.js'\r\nimport axios from 'axios';\r\nimport {SETTINGS} from '../settings/Settings.js'\r\n\r\n\r\nexport function Thread({route,navigation}) {\r\n    const {id, title, user_id} = route.params\r\n    const {nav} = navigation\r\n\r\n    class CommentThread extends React.Component {\r\n        constructor(props) {\r\n            super(props)\r\n        }\r\n        state = {\r\n            comments: []\r\n        }\r\n\r\n        componentDidMount() {\r\n            axios.get(SETTINGS.url+'/comment/')\r\n              .then((response)=>{\r\n                const comments = response.data\r\n                this.setState({comments})\r\n              })\r\n        }\r\n        render() {\r\n            const { navigate } = {nav}  \r\n            const { comments } = this.state\r\n            return (\r\n                <View>\r\n                    <Text>test {id}</Text>\r\n                    {\r\n                        comments.map((comment)=><Comment id={comment.id} post_id={comment.post_id} parent_id={comment.parent_id} text={comment.text} user_id={comment.user_id} navigation={{nav}}/>)\r\n                    }\r\n                </View>\r\n            )\r\n        }\r\n    } \r\n    return (<CommentThread/>)\r\n}"]},"metadata":{},"sourceType":"module"}