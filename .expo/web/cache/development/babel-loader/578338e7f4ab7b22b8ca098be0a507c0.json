{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"C:\\\\Users\\\\Noah\\\\Documents\\\\Smart Wand App\\\\SmartWandApp\\\\routes\\\\Thread.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Keyboard from \"react-native-web/dist/exports/Keyboard\";\nimport * as React from 'react';\nimport { render } from 'react-dom';\nimport { Comment } from \"../components/Comment.js\";\nimport axios from 'axios';\nimport { SETTINGS } from \"../settings/Settings.js\";\nimport { COLORS } from \"../components/Colors.js\";\nexport function Thread(_ref) {\n  var route = _ref.route,\n      navigation = _ref.navigation;\n  var _route$params = route.params,\n      id = _route$params.id,\n      title = _route$params.title,\n      user_id = _route$params.user_id;\n  var nav = navigation.nav;\n\n  var CommentThread = function (_React$Component) {\n    _inherits(CommentThread, _React$Component);\n\n    var _super = _createSuper(CommentThread);\n\n    function CommentThread(props) {\n      var _this;\n\n      _classCallCheck(this, CommentThread);\n\n      _this = _super.call(this, props);\n      _this.state = {\n        comments: [],\n        poster: '',\n        keyboardStatus: undefined\n      };\n      return _this;\n    }\n\n    _createClass(CommentThread, [{\n      key: \"componentDidMount\",\n      value: function componentDidMount() {\n        var _this2 = this;\n\n        this.keyboardDidShowSubscription = Keyboard.addListener('keyboardDidShow', function () {\n          _this2.setState({\n            keyboardStatus: 'Keyboard Shown'\n          });\n        });\n        this.keyboardDidHideSubscription = Keyboard.addListener('keyboardDidHide', function () {\n          _this2.setState({\n            keyboardStatus: 'Keyboard Hidden'\n          });\n        });\n      }\n    }, {\n      key: \"componentWillUnmount\",\n      value: function componentWillUnmount() {\n        this.keyboardDidShowSubscription.remove();\n        this.keyboardDidHideSubscription.remove();\n      }\n    }, {\n      key: \"render\",\n      value: function render() {\n        var _nav = {\n          nav: nav\n        },\n            navigate = _nav.navigate;\n        var _this$state = this.state,\n            comments = _this$state.comments,\n            poster = _this$state.poster;\n        return React.createElement(View, {\n          style: {\n            flex: 1\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 17\n          }\n        }, React.createElement(View, {\n          style: styles.comment_button,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 21\n          }\n        }, React.createElement(TouchableOpacity, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 25\n          }\n        }, React.createElement(Text, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 29\n          }\n        }, \"Comment\"))), React.createElement(TextInput, {\n          onSubmitEditing: Keyboard.dismiss,\n          placeholder: \"Click here\\u2026\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 21\n          }\n        }));\n      }\n    }]);\n\n    return CommentThread;\n  }(React.Component);\n\n  return React.createElement(CommentThread, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 13\n    }\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: COLORS.background,\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  post_card: {\n    backgroundColor: COLORS.color4,\n    marginTop: 10,\n    marginLeft: 10,\n    marginRight: 10,\n    padding: 10,\n    borderRadius: 10\n  },\n  title_text: {\n    alignItems: 'flex-start',\n    justifyContent: 'flex-start',\n    fontSize: 24\n  },\n  user_text: {\n    fontSize: 10\n  },\n  comment_button: {\n    flex: 1,\n    position: 'absolute',\n    bottom: 0,\n    backgroundColor: COLORS.color4,\n    marginLeft: 10,\n    marginRight: 10,\n    padding: 10,\n    borderRadius: 10\n  }\n});","map":{"version":3,"sources":["C:/Users/Noah/Documents/Smart Wand App/SmartWandApp/routes/Thread.js"],"names":["React","render","Comment","axios","SETTINGS","COLORS","Thread","route","navigation","params","id","title","user_id","nav","CommentThread","props","state","comments","poster","keyboardStatus","undefined","keyboardDidShowSubscription","Keyboard","addListener","setState","keyboardDidHideSubscription","remove","navigate","flex","styles","comment_button","dismiss","Component","StyleSheet","create","container","backgroundColor","background","alignItems","justifyContent","post_card","color4","marginTop","marginLeft","marginRight","padding","borderRadius","title_text","fontSize","user_text","position","bottom"],"mappings":"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","sourcesContent":["import {StyleSheet, View, Text, TouchableOpacity, TextInput, Keyboard} from 'react-native'\r\nimport * as React from 'react';\r\nimport { render } from 'react-dom';\r\nimport {Comment} from '../components/Comment.js'\r\nimport axios from 'axios';\r\nimport {SETTINGS} from '../settings/Settings.js'\r\nimport { COLORS } from \"../components/Colors.js\";\r\n\r\n\r\nexport function Thread({route,navigation}) {\r\n    const {id, title, user_id} = route.params\r\n    const {nav} = navigation\r\n\r\n    class CommentThread extends React.Component {\r\n        constructor(props) {\r\n            super(props)\r\n        }\r\n        state = {\r\n            comments: [],\r\n            poster: '',\r\n            keyboardStatus: undefined\r\n        }\r\n\r\n        componentDidMount() {\r\n            // axios.get(SETTINGS.url+'/comment/')\r\n            //   .then((response)=>{\r\n            //     const comments = response.data\r\n            //     this.setState({comments})\r\n            //   })\r\n            //   axios.get(SETTINGS.url+'/account/'+user_id+'/')\r\n            //   .then((response)=>{\r\n            //     const poster = response.data.email\r\n            //     this.setState({poster})\r\n            //   })\r\n            this.keyboardDidShowSubscription = Keyboard.addListener(\r\n            'keyboardDidShow',\r\n            () => {\r\n                this.setState({ keyboardStatus: 'Keyboard Shown' });\r\n            },\r\n            );\r\n            this.keyboardDidHideSubscription = Keyboard.addListener(\r\n            'keyboardDidHide',\r\n            () => {\r\n                this.setState({ keyboardStatus: 'Keyboard Hidden' });\r\n            },\r\n            );\r\n        }\r\n\r\n        componentWillUnmount() {\r\n            this.keyboardDidShowSubscription.remove();\r\n            this.keyboardDidHideSubscription.remove();\r\n        }\r\n\r\n        render() {\r\n            const { navigate } = {nav}  \r\n            const { comments , poster} = this.state\r\n            return (\r\n                <View style={{flex:1}}>\r\n                    {/* <View style={styles.post_card}>\r\n                        <Text style={styles.user_text}>User: {poster}</Text>\r\n                        <Text style={styles.title_text}>{title}</Text>\r\n                    </View>\r\n                    {\r\n                        comments.map((comment)=><Comment id={comment.id} post_id={comment.post_id} parent_id={comment.parent_id} text={comment.text} user_id={comment.user_id} navigation={{nav}}/>)\r\n                    } */}\r\n                    <View style={styles.comment_button}> \r\n                        <TouchableOpacity>\r\n                            <Text>Comment</Text>\r\n                        </TouchableOpacity>\r\n                    </View>\r\n                    <TextInput\r\n                            onSubmitEditing={Keyboard.dismiss}\r\n                            placeholder='Click here…'\r\n                        />\r\n                </View>\r\n            )\r\n        }\r\n    } \r\n    return (<CommentThread/>)\r\n}\r\n\r\n\r\n\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n      flex: 1,\r\n      backgroundColor: COLORS.background,\r\n      alignItems: 'center',\r\n      justifyContent: 'center',\r\n    },\r\n    post_card: {\r\n        backgroundColor: COLORS.color4,\r\n        marginTop:10,\r\n        marginLeft:10,\r\n        marginRight:10,\r\n        padding:10,\r\n        borderRadius:10\r\n    },\r\n    title_text: {\r\n      alignItems: 'flex-start',\r\n      justifyContent: 'flex-start',\r\n      fontSize: 24\r\n    },\r\n    user_text: {\r\n      fontSize: 10\r\n    },\r\n    comment_button: {\r\n        flex:1,\r\n        position: 'absolute',\r\n        bottom:0,\r\n        backgroundColor: COLORS.color4,\r\n        marginLeft:10,\r\n        marginRight:10,\r\n        padding:10,\r\n        borderRadius:10\r\n    }\r\n});"]},"metadata":{},"sourceType":"module"}